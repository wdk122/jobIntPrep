SORTING ALGORITHMS REVIEW


=====================================================================
INSERTION SORT

This insertion sort function separates an array into a sorted part on the left and an unsorted part on the right. Initially the unsorted part is empty, and items are removed from the unsorted part and inserted one at a time into the correct place in the sorted part. 

Given the array below:
[2, 8, 3, 6, 4, 1, 5, 7, 9, 0]

The function iterates through array[1] to the last element, using a subroutine to insert the elements into the correct places. The main loop stores the current index i's value to a placeholder variable and initiates an inner loop.

The inner loop checks if the current value is greater than the previous value; while this case is false, the inner loop performs a series of swaps to get the current value into the sorted position.

The given array mutates as follows:

[2, 8, 3, 6, 4, 1, 5, 7, 9, 0]
[2, 3, 8, 6, 4, 1, 5, 7, 9, 0]
[2, 3, 6, 8, 4, 1, 5, 7, 9, 0]
[2, 3, 4, 6, 8, 1, 5, 7, 9, 0]
[1, 2, 3, 4, 6, 8, 5, 7, 9, 0]

etc...

=====================================================================

BUBBLE SORT

Given an array of length n, the bubble sort function loops through the array n - 1 times from left to right, pushing high numbers to the right.

=====================================================================

SELECTION SORT

Given an array of length n, the selection sort function loops through the array n - 1 times from left to right. On a given loop i, where i is the ith loop through the array, the minimum value found in the loop is swapped with the value at position i in the array.

Not stable.

=====================================================================

MERGE SORT

The merge sort function returns the array if length is less than 2. Otherwise, it splits the array in half (if length is odd, shorter subarray is on the left.) After this split, the function returns a merge of the merge-sorted left side and the merge-sorted right side.



(from https://www.nczonline.net/blog/2012/10/02/computer-science-and-javascript-merge-sort/):
    The algorithm for merge sort is based on the idea that itâ€™s easier to merge two already sorted lists than it is to deal with a single unsorted list. To that end, merge sort starts by creating n number of one item lists where n is the total number of items in the original list to sort. Then, the algorithm proceeds to combine these one item lists back into a single sorted list.

Stable.

=====================================================================

QUICKSORT

This quicksort function chooses a pivot point in the center of an array, and creates pointers to the first and last array elements. While the value at the left pointer is less than the pivot, the left pointer moves to the right, and vice versa for the right pointer. When the left pointer value is greater than or equal to the pivot and the right pointer value is less than or equal to the pivot, the left and right values are swapped, but the pointers retain their positions. The pointers keep moving toward each other and swapping if left >= pivot >= right. When the left pointer moves past the right, quicksort is recursively performed on each side of the current position of the left pointer.

Not stable, not adaptive.

=====================================================================

GENERAL SORTING ALGORITHM INFO

[add something about stability here]
[add factoids about sorting algo comparisons here]
